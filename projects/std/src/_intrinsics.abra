pub decorator intrinsic { name: String }

@intrinsic("argc")
pub func argc(): Int

@intrinsic("argv")
pub func argv(): Pointer<Pointer<Byte>>

@intrinsic("__callstack")
pub func callstack(): Pointer<Int>

@intrinsic("__callstackp")
pub func callstackPtr(): Int

@intrinsic("modulenames")
pub func moduleNames(): Pointer<Byte>

@intrinsic("functionnames")
pub func functionNames(): Pointer<Byte>

@intrinsic("uninitialized")
pub func uninitialized<T>(): T

@intrinsic("u64_to_string")
pub func u64ToString(i: Int): String

@intrinsic("int_as_char")
pub func intAsChar(i: Int): Char

@intrinsic("char_as_int")
pub func charAsInt(c: Char): Int

@intrinsic("int_as_float")
pub func intAsFloat(i: Int): Float

@intrinsic("float_as_int")
pub func floatAsInt(f: Float): Int

@intrinsic("float_floor")
pub func floor(f: Float): Int

@intrinsic("float_ceil")
pub func ceil(f: Float): Int

@intrinsic("float_round")
pub func round(f: Float): Int

pub type Byte {
  @intrinsic("byte_from_int")
  pub func fromInt(value: Int): Byte

  @intrinsic("byte_as_int")
  pub func asInt(self): Int
}

pub type Pointer<T> {
  @intrinsic("pointer_null")
  pub func null<T>(): Pointer<T>

  @intrinsic("pointer_is_null")
  pub func isNullPtr(self): Bool

  @intrinsic("pointer_malloc")
  pub func malloc<T>(count = 1): Pointer<T>

  @intrinsic("pointer_realloc")
  pub func realloc<T>(ptr: Pointer<T>, count: Int): Pointer<T>

  @intrinsic("pointer_address")
  pub func address(self): Int

  @intrinsic("pointer_store_at")
  pub func storeAt(self, value: T, offset: Int)

  @intrinsic("pointer_load_at")
  pub func loadAt(self, offset: Int): T

  @intrinsic("pointer_copy_from")
  pub func copyFrom(self, dstOffset: Int, srcPtr: Pointer<T>, srcOffset: Int, size: Int)

  @intrinsic("pointer_copy_from_2")
  pub func copyFrom2(self, dstOffset: Int, srcPtr: Pointer<T>, srcOffset: Int, size: Int)
}
