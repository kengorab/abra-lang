import Pointer, Byte, intrinsic from "./_intrinsics"

pub decorator external { name: String }

@external("getenv")
pub func getenv(name: Pointer<Byte>): Pointer<Byte>

@intrinsic("errno")
pub func errno(): Int

@external("strerror")
pub func strerror(errno: Int): Pointer<Byte>

pub val O_RDONLY = 0
pub val O_WRONLY = 1
pub val O_RDWR   = 2
pub val O_CREAT  = 512

@external("open")
pub func open(pathname: Pointer<Byte>, flags: Int, mode: Int): Int

@external("close")
pub func close(fd: Int): Int

pub val SEEK_SET = 0
pub val SEEK_CUR = 1
pub val SEEK_END = 2

@external("lseek")
pub func lseek(fd: Int, offset: Int, whence: Int): Int

@external("read")
pub func read(fd: Int, buf: Pointer<Byte>, count: Int): Int

@external("stat")
pub func stat(pathname: Pointer<Byte>, statbuf: Pointer<Byte>): Int

pub val STDIN_FILENO  = 0
pub val STDOUT_FILENO = 1
pub val STDERR_FILENO = 2

@external("write")
pub func write(fd: Int, buf: Pointer<Byte>, count: Int): Int

pub val PATH_MAX = 4096

@external("getcwd")
pub func getcwd(buf: Pointer<Byte>, count: Int): Pointer<Byte>

@external("strlen")
pub func strlen(s: Pointer<Byte>): Int

@external("uname")
pub func uname(utsnameBuf: Pointer<Byte>): Int

@external("rand")
pub func rand(): Int

@external("exit")
pub func exit(status: Int): Unit
