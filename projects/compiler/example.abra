// type Person {
//   name: String
//   age: Int
// }

// val me = Person(name: "Ken", age: 33)
// stdoutWriteln(me.toString())

(() => {
  val capturedArray = [1, 2, 3]
  val closure2 = (zero = 0) => {
    capturedArray.pop()
    capturedArray.length + zero
  }
  /// Expect: [1, 2, 3]
  stdoutWriteln(capturedArray.toString())
  /// Expect: 2
  stdoutWriteln(closure2().toString())
  /// Expect: [1, 2]
  stdoutWriteln(capturedArray.toString())
  capturedArray.push(3)
  /// Expect: [1, 2, 3]
  stdoutWriteln(capturedArray.toString())
})()
