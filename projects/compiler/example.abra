// // func foo() {
// //   unreachable("hello")
// // }

// // func bar() = foo()

// // func baz() = bar()

// // baz()
// import macro, Expr, InjectedCode from "meta"

// @macro
// func lazy(expr: Expr): InjectedCode {
//   val cacheName = "_${String.random(3)}"

//   InjectedCode.new()
//     .append("var $cacheName: Int? = None\n")
//     .append("() => {")
//     .append("  if $cacheName |v| return v")
//     .append("  val v = ").appendExpr(expr)
//     .append("  $cacheName = Some(v)")
//     .append("  v")
//     .append("}")
// }

// func makeInt(): Int {
//   stdoutWriteln("makeInt called!")

//   return 24
// }

// val int = lazy(makeInt())

// // val makeInt = () => {
// //   if cache |v| return v
// //   stdoutWriteln("makeInt called")

// //   cache = Some(123)
// //   return 123
// // }
// // var cache: Int? = None

// stdoutWriteln(""+int())
// () => {
//     return 123
// }

// "hasdf"

val arr = ["a", "b", "c"]

val s = if arr[0] |s| s else "asdf"
stdoutWriteln(s)
