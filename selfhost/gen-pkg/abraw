#!/usr/bin/env bash

set -e # exit on non-zero exit status

# abra <file-name> [program-args]
#     Compiles and executes program from source <file-name>, passing along any [program-args]
# abra build [-r|--run] [-o <output-file>] <file-name> [program-args]
#     Compiles program from source <file-name>, saving resulting binary as <output-file> (if specified, `_main` otherwise),
#     and running the file if -r/--run flag provided, passing along any [program-args]
if [[ "$1" == "build" ]]; then
  shift
  a="$1"
  if [[ "$a" == "-r" || "$a" == "--run" ]]; then
    run=true
    shift
    a="$1"
  fi
  if [[ "$a" == "-o" ]]; then
    shift
    outfile="$1"
    shift
    a="$1"
  fi
else
  run=true
fi

filepath="$1"
shift
if [[ -z "${outfile}" ]]; then
  outfile="_main"
fi

dotabradir="$(pwd)/._abra"
mkdir -p "$dotabradir"
touch "$dotabradir/$outfile.ssa"
: > "$dotabradir/$outfile.ssa" # truncate file

abra_root=$(cd "$(dirname "$0")"; pwd)

export ABRA_HOME="$abra_root/std"
$(echo "$abra_root/compiler $filepath $outfile")

qbe -o "$dotabradir/$outfile.s" "$dotabradir/$outfile.ssa"

CFLAGS="-Wno-override-module"
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Ignore linker warnings. For some reason libgc.a has warnings on macos
  CFLAGS="$CFLAGS -Wl,-w"
fi

clang "$dotabradir/$outfile.s" $abra_root/include/libgc.a -o "$dotabradir/$outfile" -lm $CFLAGS

if [[ "$run" == "true" ]]; then
  $(echo "$dotabradir/$outfile $@")
fi
