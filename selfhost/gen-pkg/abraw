#!/usr/bin/env bash

set -e # exit on non-zero exit status

abra_root=$(dirname "$(readlink -f "$0")")
abra_version=$(cat "$abra_root/version")

usage=$(cat <<EOF
abra $abra_version

USAGE:
  abra <SUBCOMMAND>

SUBCOMMANDS:
  build     Compiles abra source file into binary
    USAGE:
      abra build [FLAGS] [OPTIONS] <file-path> [<program-args>...]

    ARGS:
      <file-path>         Path of the abra source file to compile
      <program-args>...   Arguments to pass to the built abra program, if [-r/--run] is passed

    FLAGS:
      -r, --run           Run after building, forwarding along <program-args>...

    OPTIONS:
      -o <out-file-name>  Where the resulting binary should be placed

  help/-h     Prints this usage info
    USAGE:
      abra help
      abra -h

  default     Compiles and runs abra source file
    USAGE:
      abra <file-path> [<program-args>...]

    ARGS:
      <file-path>         Path of the abra source file to compile
      <program-args>...   Arguments to pass to the built abra program
EOF
)

if [[ "$1" == "-h" ]]; then
  echo "$usage"
  exit 0
elif [[ "$1" == "build" ]]; then
  shift
  a="$1"
  if [[ "$a" == "-r" || "$a" == "--run" ]]; then
    run=true
    shift
    a="$1"
  fi
  if [[ "$a" == "-o" ]]; then
    shift
    outfile="$1"
    shift
    a="$1"
  fi
else
  run=true
fi

filepath="$1"
shift
if [[ -z "${outfile}" ]]; then
  outfile="_main"
fi

dotabradir="$(pwd)/._abra"
mkdir -p "$dotabradir"
touch "$dotabradir/$outfile.ssa"
: > "$dotabradir/$outfile.ssa" # truncate file

if [[ -z "$ABRA_HOME" ]]; then
  echo "Cannot determine ABRA_HOME. Ensure the environment variable exists and points to the std/ dir of the installation"
  exit 1
fi

compiler_bin="${COMPILER_BIN:-"$abra_root/compiler"}"
$(echo "$compiler_bin $filepath $outfile")

qbe -o "$dotabradir/$outfile.s" "$dotabradir/$outfile.ssa"

CFLAGS="-Wno-override-module"
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Ignore linker warnings. For some reason libgc.a has warnings on macos
  CFLAGS="$CFLAGS -Wl,-w"
fi

clang "$dotabradir/$outfile.s" $abra_root/include/libgc.a -o "$dotabradir/$outfile" -lm $CFLAGS

if [[ "$run" == "true" ]]; then
  $(echo "$dotabradir/$outfile $@")
fi
