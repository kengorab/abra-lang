#!/usr/bin/env bash
set -e # exit on non-zero exit status

# ./abra <file-name> [program-args]
#     Compiles and executes program from source <file-name>, passing along any [program-args]
# ./abra build [-r|--run] [-o <output-file>] <file-name> [program-args]
#     Compiles program from source <file-name>, saving resulting binary as <output-file> (if specified, `_main` otherwise),
#     and running the file if -r/--run flag provided, passing along any [program-args]
if [[ "$1" == "build" ]]; then
  shift
  a="$1"
  if [[ "$a" == "-r" || "$a" == "--run" ]]; then
    run=true
    shift
    a="$1"
  fi
  if [[ "$a" == "-o" ]]; then
    shift
    outfile="$1"
    shift
    a="$1"
  fi
else
  run=true
fi

filepath="$1"
shift
if [[ -z "${outfile}" ]]; then
  outfile="_main"
fi

mkdir -p ._abra
touch "./._abra/$outfile.ssa"
: > "./._abra/$outfile.ssa" # truncate file

export ABRA_HOME=`realpath ../abra_core/std`
if [[ -z "${COMPILER_BIN}" ]]; then
  ../target/debug/abra build -r ./src/compiler.test.abra -- "$filepath" "$outfile"
else
  $(echo "$COMPILER_BIN $filepath $outfile")
fi

qbe -o "./._abra/$outfile.s" "./._abra/$outfile.ssa"

CFLAGS="-Wno-override-module"
if [[ "$OSTYPE" == "darwin"* ]]; then
  # Ignore linker warnings. For some reason libgc.a has warnings on macos
  CFLAGS="$CFLAGS -Wl,-w"
fi
# TODO: don't assume the location of libgc
clang "./._abra/$outfile.s" ../abra_llvm/ext/libgc/lib/libgc.a -o "./._abra/$outfile" -lm $CFLAGS

if [[ "$run" == "true" ]]; then
  export SELFHOSTED=true
  $(echo "./._abra/$outfile $@")
fi
