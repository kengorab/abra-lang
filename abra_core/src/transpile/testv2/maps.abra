/// Expect: {}
val empty: Map<String, Int> = {}
println(empty)

/// Expect: { "a": 24 }
println({ a: 24 })

// Test various key types
val m1 = { a: 1, "b": 2 }
/// Expect: 1 2
println(m1["a"], m1["b"])

val m2 = { ("a" + "b"): 1, "hello world": 2 }
/// Expect: 1 2
println(m2["ab"], m2["hello world"])

val m3 = { 1234: "1", (-12): "2" }
/// Expect: 1 2
println(m3[1234], m3[-12])

val m4 = { ([1, 2, 3]): "1", ([4, 5]): "2" }
/// Expect: 1 2
println(m4[[1, 2, 3]], m4[[4, 5]])

val m5 = { ({ a: 1 }): "1", ({ b: 2 }): "2" }
/// Expect: 1 2
println(m5[{ a: 1 }], m5[{ b:2 }])

// Test index assignment
(() => {
  val map = { a: "one", b: "two" }
  /// Expect: { "a": "one", "b": "two" }
  println(map)
  /// Expect: three four { "a": "three", "b": "four" }
  println(
    map["a"] = "three",
    map["b"] = "four",
    map
  )
})()
(() => {
  val map = { ([1, 2]): "one two", ([3, 4]): "three four" }
  /// Expect: { [1, 2]: "one two", [3, 4]: "three four" }
  println(map)
  /// Expect: 1, 2 3, 4 { [1, 2]: "1, 2", [3, 4]: "3, 4" }
  println(
    map[[1, 2]] = "1, 2",
    map[[3, 4]] = "3, 4",
    map
  )
})()

// Test equality operators
/// Expect: true
println({ a: 1, b: 2 } == { "b": 2, "a": 1})
/// Expect: true
println({ a: "1", b: "2" } != { b: 2, a: 1})
