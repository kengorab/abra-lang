val hello = "hello"
val world = "world"

println(hello, world)

println(hello + " " + world + "!")
println(123 + "!", "abc" + 123)

// Test equality operators
println("hello" == "hello", "hello" == "world")
println("hello" != "hello", "hello" != "world")

// Indexing
val str = "hello"
println(str[0], str[-4], str[-8], str[8])
println(str[1:4], str[-4:4])
println(str[1:], str[:1])

// Fields
println("".length, "asdf".length, "hello world".length)

// Methods
// toLower
println("".toUpper(), "ASDF".toLower(), "aSdF".toLower(), "IT'S ONLY $12.24!".toLower())

// toUpper
println("".toUpper(), "asdf".toUpper(), "AsDf".toUpper(), "It's only $12.24!".toUpper())

// padLeft
println(
  "asdf".padLeft(3),
  "|" + "asdf".padLeft(6) + "|",
  "asdf".padLeft(10, "_"),
  "asdf".padLeft(12, "123"),
)

// trim
println(
  "|" + "  asdf".trim() + "|",
  "|" + "asdf  ".trim() + "|",
  "|" + "as  df".trim() + "|",
  "|" + "  as  df  ".trim() + "|",
)

// trimStart
println(
  "|" + "  asdf   ".trimStart() + "|",
  "|" + "!!asdf   ".trimStart(pattern: "!") + "|",
  "|" + "!!!asdf   ".trimStart("!!") + "|",
  "|" + "!!!asdf   ".trimStart("!!!!") + "|",
)

// trimEnd
println(
  "|" + "   asdf   ".trimEnd() + "|",
  "|" + "   asdf!!".trimEnd(pattern: "!") + "|",
  "|" + "   asdf!!!".trimEnd("!!") + "|",
  "|" + "   asdf!!!".trimEnd("!!!!") + "|",
)

// split
println(
  "a s d f".split(splitter: " "),
  "  a  b  c d".split("  "),
  "asdf".split("qwer"),
  "asdf".split(""),
  "a\ns\nd\nf".split("\n"),
)

// splitAt
val stringToSplit = "hello!"
println(
  stringToSplit.splitAt(0),
  stringToSplit.splitAt(1),
  stringToSplit.splitAt(-1),
  stringToSplit.splitAt(-8),
  stringToSplit.splitAt(10),
)

// lines
println("asdf\nqwer\nzxcv".lines())

// chars
println("asdf".chars())

// parseInt
println(
  "0".parseInt(),
  "000".parseInt(),
  "0k0".parseInt(),
  "k00".parseInt(),
  "hello".parseInt(),
  "123 456".parseInt(),
  "123456.7".parseInt(),
  "123456".parseInt(),
  "-123456".parseInt(),
  "ba55".parseInt(radix: 16),
)

// parseFloat
println(
  "0".parseFloat(),
  "000".parseFloat(),
  "0.00".parseFloat(),
  "0k0".parseFloat(),
  "k00".parseFloat(),
  "hello".parseFloat(),
  "123 456".parseFloat(),
  "123456.7".parseFloat(),
  "-123456.7".parseFloat(),
  "123456".parseFloat(),
  "-123456".parseFloat(),
)

// concat
println(
  "hello".concat("!"),
  "hello".concat(" ", "world", "!"),
  "asdf".concat(true, [1, 2, 3], {a:1}),
)

// replaceAll
println(
  "|" + "a b c".replaceAll(" ", ", ") + "|",
  "|" + "a b c".replaceAll("  ", ", ") + "|",
)

/* assert(stdout):
hello world
hello world!
123! abc123
true false
false true
h e None None
ell ell
ello h
0 4 11
 asdf asdf it's only $12.24!
 ASDF ASDF IT'S ONLY $12.24!
asdf |  asdf| ______asdf 12312312asdf
|asdf| |asdf| |as  df| |as  df|
|asdf   | |asdf   | |!asdf   | |!!!asdf   |
|   asdf| |   asdf| |   asdf!| |   asdf!!!|
[a, s, d, f] [, a, b, c d] [asdf] [a, s, d, f] [a, s, d, f]
(, hello!) (h, ello!) (hello, !) (, hello!) (hello!, )
[asdf, qwer, zxcv]
[a, s, d, f]
0 0 0 None None 123 123456 123456 -123456 47701
0.0 0.0 0.0 0.0 None None 123.0 123456.7 -123456.7 123456.0 -123456.0
hello! hello world! asdftrue[1, 2, 3]{ a: 1 }
|a, b, c| |a b c|
*/