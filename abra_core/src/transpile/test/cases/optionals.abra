// Test optional-safe accessor (field access)
(() => {
  val arr = ["abc"]
  println(arr[0]?.length, arr[1]?.length)
})()

// Test optional-safe accessor (method calls)
(() => {
  val arr = ["abc"]
  println(
    arr[0]?.toUpper()?.toLower()?.length?.isEven(),
    arr[1]?.toUpper()?.toLower()?.length?.isEven(),
  )
})()

// Test coalesce operator
(() => {
  val arr = [1, 2, 3]
  print(arr[0] ?: 12, arr[5] ?: 12, "")

  var item = arr[11]
  item ?:= 12
  println(item)
})()

/* assert(stdout):
3 None
false None
1 12 12
*/
