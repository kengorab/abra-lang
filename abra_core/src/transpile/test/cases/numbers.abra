val six = 6
val twentyFour = 24

val sixPointOne = 6.1
val twentyFourPointTwo = 24.2

// Test binary operators
println(
  six + twentyFour,
  sixPointOne + twentyFourPointTwo,
  sixPointOne + twentyFour,
  six + twentyFourPointTwo
)

println(
  six - twentyFour,
  sixPointOne - twentyFourPointTwo,
  sixPointOne - twentyFour,
  six - twentyFourPointTwo
)

println(
  six * twentyFour,
  sixPointOne * twentyFourPointTwo,
  sixPointOne * twentyFour,
  six * twentyFourPointTwo
)

println(
  six / twentyFour,
  sixPointOne / twentyFourPointTwo,
  sixPointOne / twentyFour,
  six / twentyFourPointTwo
)

println(
  six ** twentyFour,
  sixPointOne ** twentyFourPointTwo,
  sixPointOne ** twentyFour,
  six ** twentyFourPointTwo
)

// Test unary operator
println(
  -(-six + -twentyFourPointTwo)
)

// Int methods
// abs
println(6.abs(), (-6).abs())

// asBase
println(
  6.asBase(0),
  6.asBase(1),
  6.asBase(37),
  6.asBase(10),
  24.asBase(8),
  4040.asBase(16),
  20.asBase(17),
  24032.asBase(36),
  9223372036854775807.asBase(36),
  9223372036854775807.asBase(2),
)

// isEven
println(
  0.isEven(),
  6.isEven(),
  (-6).isEven(),
  5.isEven(),
)

// isOdd
println(
  0.isOdd(),
  6.isOdd(),
  (-1).isOdd(),
  1.isOdd(),
)

// isBetween
println(
  0.isBetween(0, 5),
  0.isBetween(lower: 0, upper: 5, inclusive: true),
  (-1).isBetween(lower: 0, upper: 5, inclusive: true),
)

// Float methods
// floor
println(
  6.24.floor(),
  (() => {
    val f = 6.7
    f.floor()
  })(),
  (() => {
    val f = -6.7
    f.floor()
  })(),
)

// ceil
println(
  6.24.ceil(),
  (() => {
    val f = 6.7
    f.ceil()
  })(),
  (() => {
    val f = -6.7
    f.ceil()
  })(),
)

// round
println(
  6.24.round(),
  6.75.round(),
  (-6.455).round(),
)

// withPrecision
println(
  6.12345.withPrecision(0),
  6.98765.withPrecision(0),
  6.98765.withPrecision(-1),
  1.23456.withPrecision(2),
)

// abs
println(
  6.24.abs(),
  (-6.24).abs(),
)

/* assert(stdout):
30 30.3 30.1 30.2
-18 -18.1 -17.9 -18.2
144 147.62 146.4 145.2
0.25 0.252066 0.254167 0.247934
4738381338321616896.0 10115375455797929984.0 7045568477354638336.0 6780477189624366080.0
30.2
6 6
6 6 6 6 30 fc8 13 ijk 1y2p0ij32e8e7 111111111111111111111111111111111111111111111111111111111111111
true true true false
false false true true
false true false
6 6 -7
7 7 -6
6 7 -6
6.0 7.0 6.98765 1.23
6.24 6.24
*/
