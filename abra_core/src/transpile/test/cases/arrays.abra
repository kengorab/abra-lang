val empty: Int[] = []
println(empty)

val emptyNested: Int[][][] = [[[]]]
println(emptyNested)

val nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
val nested = [[1, 2], [3, 4]]
val ifs = [if true 1 else 2, if true 2 else 3, if false 3 else 4]
println(nums, nested, ifs)

// Nested within expression
println(
  [if true 1 else 2, if true 2 else 3, if false 3 else 4]
)

// Test equality operators
println(
  [1, 2, 3] == [1, 2, 3],
  [1, 2] == [1, 2, 3]
)
println(
  [1, "2", 3] != [1, "2", 3],
  [1, 2, "3"] != [1, "2", 3]
)
println(
  [[1, 2], [3, 4]] == [[1, 2], [3, 4]],
  [[1, 2], [3, 4]] == [[1, 2, 3], [4]],
)
println([1, 2, 3] == "asdf")

// Array of tuples
println([(1, 2, 3), (4, 5, 6), (7, 8, 9)])

// Indexing
val arr1 = [1, 2, 3]
println(arr1[0], arr1[1], arr1[2], arr1[3], arr1[-1], arr1[-2], arr1[-3], arr1[-4])

// Range
val arr2 = [1, 2, 3, 4, 5]
println(arr2[1:])
println(arr2[:2])
println(arr2[1:3], arr2[-2:4])

// Range builtin function
println(range(0, 4))
println(range(0, -4))
println(range(0, 10, 2))
println(range(1, 10, 3))

/* assert(stdout):
[]
[[[]]]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10] [[1, 2], [3, 4]] [1, 2, 4]
[1, 2, 4]
true false
false true
true false
false
[(1, 2, 3), (4, 5, 6), (7, 8, 9)]
1 2 3 None 3 2 1 None
[2, 3, 4, 5]
[1, 2]
[2, 3] [4]
[0, 1, 2, 3]
[]
[0, 2, 4, 6, 8]
[1, 4, 7]
*/