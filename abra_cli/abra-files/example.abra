type Node {
  value: String
  next: Node? = None
}

type LinkedList {
  count: Int = 0
  head: Node? = None

  func push(self, item: String): Int {
    if self.head |head| {
      var node = head
      while node.next |n| node = n
      node.next = Node(value: item)
    } else {
      self.head = Node(value: item)
    }

    self.count = self.count + 1
  }

  func toString(self): String {
    if self.head |head| {
      var str = ""
      var node = head

      while node.next |n| {
        str = str + node.value + ", "
        node = n
      }

      str + node.value
    } else {
      "[]"
    }
  }
}

val list = LinkedList()
list.push("a")
list.push("b")
list.push("c")
list.push("d")
list.toString()
