//enum Color {
//  Red
//  R(r: Int)
//}
//
//func a(f: (Int) => Color) = println(f(16))
//
//a(Color.R)

val four = 4

enum Color {
  Red
  Green
  Blue
  RGB(r: Int, g: Int, b: Int = four)

  func toHex(self): String {
    if self == Color.Red {
      "0xFF0000"
    } else if self == Color.Green {
      "0x00FF00"
    } else if self == Color.Blue {
      "0x0000FF"
    } else {
      "unreachable"
    }
  }
}

println(Color.RGB, Color.RGB(r: 1, g: 2))
//println(Color.Red.toHex(), Color.Green.toHex(), Color.Blue.toHex(), Color.RGB(r: 1, g: 2, b: 3))


/* TODO: Function hoisting
val hello = "Hello"

type Person {
  name: String

  func greet(self) {
    sayHello(hello)
  }
}

func sayHello(msg: String) = println(msg)

val me = Person(name: "Ken")
me.greet()
*/
